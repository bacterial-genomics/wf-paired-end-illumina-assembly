#!/usr/bin/env bash
#$ -cwd

# This wrapper script manages job submission of
#  the wf-paired-end-illumina-assembly workflow
#  to the UGE scheduler.
SCRIPT_NAME="$(basename ${0#_} .uge-nextflow)"

# Define script usage
usage() {
  echo "
Usage: ${0##*/} InputDirectory [OutputDirectory] [-h|--help]

Required:
  <InputDirectory>   Path containing PE Illumina 1.8+ files as *.fastq.gz

  Sample names are extracted from the first underscore of read files. Hyphens,
  periods, and commas are automatically discarded from the name to avoid errors.
  WARNING: If you have HiSeq data where samples are ran on more than one lane,
  be sure to concatenate them.

  File searching goes 2 levels deep to find .fq and .fastq file pairs,
  optionally gunzip compressed.

  Sample pairing of sister reads is done by consecutively using filenames sorted
  with \`ls\`, which flexibly allows for naming other than traditional R1 and R2.
  Verify that files will properly pair by checking the output order of \`ls\`
  within the <InputDirectory>.

Optional:
  -h | --help         Show this help message and exit.
  <OutputDirectory>   Location for the output files, which
                      includes job logfiles. Output files
                      will be overwritten if already present.
                      Default: current working directory.
  "
}

# Pass input variables to new area
IN=$(readlink -f "$1")
if [[ -z "$2" ]]; then
  OUT="${PWD}"
else
  OUT=$(readlink -f "$2")
fi

# If old workflows area isn't commented out, lets comment it out
# Create a backup, just in case
cp -f "${HOME}/.bashrc" "${HOME}/.bashrc_backup_wf"

old_paths=( $(echo $(grep "workflows/wf-paired-end-illumina-assembly" ${HOME}/.bashrc | egrep -v "^#") ) )
if [[ ${old_paths[@]} ]]; then
  for path in ${old_paths[@]}; do
    sed -i "s|\(^export $path\)|#\1|" "${HOME}/.bashrc"
  done
fi

# Load nextflow and pull latest workflow (should always be main)
module load nextflow
nextflow pull bacterial-genomics/wf-paired-end-illumina-assembly -r main

# Update bashrc paths
wf_paths=(
  $(find $HOME/.nextflow/assets/* \
  -mindepth 1 \
  -maxdepth 1 \
  -type d \
  | sed -e "s|/scicomp/.*/${USER}|\${HOME}|g")
)

# Check each path to see if it is in bashrc
for workflow in ${wf_paths[@]}; do
  if [[ ! $(grep "${workflow}" ${HOME}/.bashrc) ]]; then
    # WARNING: DO NOT TOUCH THE LINE BELOW THIS
    echo -e "export PATH=\$PATH:${workflow}" >> "${HOME}/.bashrc"
  fi
done

# Update environment
source ${HOME}/.bashrc

# Pass inputs of to this runner script to new runner script area
bash "${HOME}/.nextflow/assets/bacterial-genomics/run_assembly.uge-nextflow" "${IN}" "${OUT}"