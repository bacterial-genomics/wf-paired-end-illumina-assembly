/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Nextflow config file for running minimal tests
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Defines input files and everything required to run a fast and simple pipeline test.

    Use as follows:
        nextflow run ./wf-paired-end-illumina-assembly -profile test,<docker/singularity> --outdir results_test

----------------------------------------------------------------------------------------
*/

params {
    config_profile_name                 = 'Test profile for local high resource use to get host removal working while skipping Kraken and Kraken2'
    config_profile_description          = 'Minimal test dataset to check pipeline function'

    // High local resources so that this completes
    // NOTE:  unable to run host removal on miniburk with GitHub Actions
    //        resource limitations
    max_cpus                            = 2
    max_memory                          = '99.GB'
    max_time                            = '6.h'

    // Input data
    input                               = 'https://raw.githubusercontent.com/bacterial-genomics/test-datasets/assembly/samplesheets/samplesheet.csv'

    // Use SPAdes assembler workflow
    assembler                           = 'spades'

    // Skip kraken1 and kraken2
    kraken1_db                          = ""
    kraken2_db                          = ""

    // Ensure BOTH hostile and sra scrub host removal channels are invoked
    host_remove                         = 'both'

    // Skip subsampling routine entirely, faster, and not needed
    //  for this miniburk test set.
    // ESTIMATE_GENOME_SIZE_KMC channel sometimes gives C++
    //  memory issue, e.g., `cat kmc.test_miniburk.stderr.log`
    //  "Error: std::bad_alloc"
    depth                               = 0

    // Modify minimum filesize parameters to allow pipeline completion
    min_filesize_fastq_input                         = '15M'
    min_filesize_fastq_hostile_removed               = '15M'
    min_filesize_fastq_sra_human_scrubber_removed    = '15M'
    min_filesize_broken_pairs_bbtools_repair_removed = '15M'
    min_filesize_fastq_phix_removed                  = '1k'
    min_filesize_fastq_adapters_removed              = '1k'
    min_filesize_non_overlapping_fastq               = '1k'
    min_filesize_binary_pe_alignment                 = '1k'
    min_filesize_filtered_assembly                   = '1k'
    min_filesize_polished_assembly                   = '1k'
    min_filesize_final_assembly                      = '1k'
    min_filesize_annotated_genbank                   = '1k'
}

process {
    // Allow it to retry a failed channel
    errorStrategy                       = { task.exitStatus in [1,71,104,134,137,139,140,143,255] ? 'retry' : 'finish' }
    maxRetries                          = 3
    maxErrors                           = '-1'
}
